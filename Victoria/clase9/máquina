Práctica 1 - Diseña un script para gestionar por consola una máquina expendedora

Características:

Solo los usuarios registrados pueden usar la máquina
El sistema funciona sin dinero real, en su lugar se usa un sistema de puntos
Los usuarios disponen de unos puntos para gastar en la máquina que el departamento de personal asigna.
La maquina no concederá creditos, solo trabaja en base a los puntos disponibles.
Para agilizar la reposición de lo consumido... la maquina debe controlar en stock



------ Paso 1 - Creamos los primeros objetos básicos: ------

Maquina Expendedora (Objeto)
Productos (Array)
Clientes (Array)

Solución:

var maquina = {
  productos: [],
  clientes: [],
};




	
------ Paso 2 - Creamos los primeros perfiles en el Array de clientes: ------

Propiedades:
Nombre
Usuario
Contraseña
Tipo usuario
Presupuesto
	

var maquina = {
  productos: [[art],[posic],[stock], [precio]],
  clientes: [[nombre],[saldo]],
};

var art = ["sandwich","fanta","agua"];
var posic = [1,2,3];
var stock = [7,12,25];
var precio = [120, 60, 60];

var nombre = ["Laura","Luís","pedro"];
var saldo = [1270,930,630];

console.log(maquina);







------ Paso 3 - Creamos varios métodos para gestionar a los clientes y sus necesidades ------

Metodos:

Consultar saldo de un cliente
Devolverá el saldo existente o -1 en caso de error
Comprobaremos la contraseña y el usuario
Consultar gastos de un cliente
Devolverá un array o false en caso de error
Comprobaremos la contraseña y el usuario
Agregar un cliente
Eliminar un cliente
Caracteristicas:

Evitaremos que se registren usuarios que ya existan
Evitaremos eliminar usuarios que no existan
Evitaremos dar de alta usuarios que no esten debidamente cumplimentados
Protegeremos las funciones de gestión de usuarios con la contraseña ficticiaMola

function claveGeneral (){
var confirmarClave=prompt("Indica la clave de acceso");
for (var intentos = 0; intentos <= 3; intentos++){

if (confirmarClave==="FictiziaMola"){

console.log("accediendo");

var maquina = {
  productos: [art, posic, stock,precio],
  clientes: [nombre,saldo],
};

var art = ["sandwich","fanta","agua"];
var posic = [1,2,3];
var stock = [7,12,25];
var precio = [120, 60, 60];

var nombre = ["Laura","Luís","Pedro"];
var pass = ["laura1","luis1","pedro1"]
var saldo = [1270,930,630];
var gasto = [gasto1,gasto2,gasto3];
var gasto1 = [];
var gasto2 = [];
var gasto3 = [];



var verSaldo = prompt("Indica el usuario para conocer su saldo");

for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === verSaldo) {
	        	var verPass = prompt("verifica la contraseña de usuario");
	        	if (verPass=pass[i]) {
	            console.log(saldo[i]);
	            }
	   			else {
	   			console.log("contraseña incorreta");
	   			}
	   		break;
	        }
	        else {
	        verSaldo=-1
	        }
	 	
	    }
	    

var gastos=[];
function masGasto () {}
function consultarGasto (){
  var verGastos = prompt("de qué usuario desea conocer el gasto?");
  for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === verGasto) {
	        	var verPass = prompt("verifica la contraseña de usuario");
	        	if (verPass=pass[i]) {
	            console.log(gasto[i]);
	            }
	   			else {
	   			console.log("contraseña incorreta");
	   			}
	   		break;
	        }
	        else {
	        verGasto=false;
	        }
	 	
	    }

	
}
 function nuevoCliente (){
 	var agregarCliente = prompt("Introduzca el nombre del nuevo cliente");
 	for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === agregarCliente) {
	        	console.log("el cliente ya existe")
	        }
	        else {
	        nombre.push(agregarCliente);
	        var agregarPass = prompt("introduce clave de usuario");
	        if (agregarPass !== ""){
	        pass.push(agregarPass);
	        }
	        else{
	        console.log("El campo no puede estar vacío");
	        }
	        var agregarSaldo = prompt ("introduce saldo de usuario");
	         if (agregarSaldo !== ""){
	        pass.push(agregarSaldo);
	        }
	        else{
	        console.log("El campo no puede estar vacío");
	        }
	        break;
	        }
	 	
	    }
 }

 function eliminarCliente (){
 var eliminarCliente = prompt("Introduzca el nombre del cliente que quiere eliminar");
 	for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === eliminarCliente) {
	        nombre.splice(i,1);
	        pass.splice(i,1);
	        saldo.splice(i,1);
	        console.log("usuario eliminado");
	        break;        	
	        }
	        else {
	        	console.log("el nombre no existe en nuestra base de datos")
	        }
	 	
	    }
 }




}
else if (intentos===3){
	console.log("has agotado todos los intentos. Por seguridad no puedes acceder")
}

else {
	var confirmarClave = prompt("Introduce la clave")
}
}
}

Paso 4 - Creamos varios métodos para gestionar a los productos y sus necesidades

Creamos 5 productos que estarán disponibles a la venta

Métodos:

Consumir un producto (cliente)
Comprobaremos la contraseña y el usuario
Devolverá el producto o -1 en caso de no existir o estar agotado
Actualizaremos el stock
Actualizaremos el saldo del cliente
Agregar un producto a la máquina (administración)
Eliminar un prodcutos de la máquina (administración)
Caracteristicas:

Evitaremos agregar productos que ya existan
Evitaremos eliminar productos que no existan
Evitaremos agregar productos que no esten debidamente cumplimentados
Protegeremos las funciones de agregar y eliminar productos con la contraseña ficticiaMola



function claveGeneral (){
var confirmarClave=prompt("Indica la clave de acceso");
for (var intentos = 0; intentos <= 3; intentos++){

if (confirmarClave==="FictiziaMola"){

console.log("accediendo");

var maquina = {
  productos: [art, posic, stock,precio],
  clientes: [nombre,saldo],
};

var art = ["sandwich","fanta","agua","coca-cola","bollo"];
var posic = [1,2,3,4,5,6];
var stock = [7,12,25,5,9];
var precio = [120, 70, 60, 70, 90];

var nombre = ["Laura","Luís","Pedro"];
var pass = ["laura1","luis1","pedro1"]
var saldo = [1270,930,630];
var gasto = [gasto1,gasto2,gasto3];
var gasto1 = [];
var gasto2 = [];
var gasto3 = [];



var verSaldo = prompt("Indica el usuario para conocer su saldo");

for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === verSaldo) {
	        	var verPass = prompt("verifica la contraseña de usuario");
	        	if (verPass=pass[i]) {
	            console.log(saldo[i]);
	            }
	   			else {
	   			console.log("contraseña incorreta");
	   			}
	   		break;
	        }
	        else {
	        verSaldo=-1
	        }
	 	
	    }
	    

var gastos=[];
function masGasto () {}
function consultarGasto (){
  var verGastos = prompt("de qué usuario desea conocer el gasto?");
  for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === verGasto) {
	        	var verPass = prompt("verifica la contraseña de usuario");
	        	if (verPass=pass[i]) {
	            console.log(gasto[i]);
	            }
	   			else {
	   			console.log("contraseña incorreta");
	   			}
	   		break;
	        }
	        else {
	        verGasto=false;
	        }
	 	
	    }

	
}
 function nuevoCliente (){
 	var agregarCliente = prompt("Introduzca el nombre del nuevo cliente");
 	for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === agregarCliente) {
	        	console.log("el cliente ya existe")
	        }
	        else {
	        nombre.push(agregarCliente);
	        var agregarPass = prompt("introduce clave de usuario");
	        if (agregarPass !== ""){
	        pass.push(agregarPass);
	        }
	        else{
	        console.log("El campo no puede estar vacío");
	        }
	        var agregarSaldo = prompt ("introduce saldo de usuario");
	         if (agregarSaldo !== ""){
	        pass.push(agregarSaldo);
	        }
	        else{
	        console.log("El campo no puede estar vacío");
	        }
	        break;
	        }
	 	
	    }
 }

 function eliminarCliente (){
 var eliminarCliente = prompt("Introduzca el nombre del cliente que quiere eliminar");
 	for (var i = 0; i < nombre.length; i++) {
	        if (nombre[i] === eliminarCliente) {
	        nombre.splice(i,1);
	        pass.splice(i,1);
	        saldo.splice(i,1);
	        console.log("usuario eliminado");
	        break;        	
	        }
	        else {
	        	console.log("el nombre no existe en nuestra base de datos")
	        }
	 	
	    }
 }


var compra=prompt("indique la posición del producto que desea adquirir")
	if (parseInt(compra)!==NaN){
	var compraUsuario= propmt("confirma tu usuario");


 			if (nombre[i] === compraUsuario) {
	        	var verPass = prompt("verifica la contraseña de usuario");
	        	if (verPass=pass[i]) {
	            	
	            }
	   			else {
	   			console.log("contraseña incorreta");
	   			}
	   		break;
	        }
	        else {
	        verSaldo=-1
	        }


	for (var i = 0; i < posic.length; i++) {
	        if (posic[i] === verGasto) {
	        	var verPass = prompt("verifica la contraseña de usuario");
	        	if (verPass=pass[i]) {
	            console.log(gasto[i]);
	            }
	   			else {
	   			console.log("contraseña incorreta");
	   			}
	   		break;
	        }
	        else {
	        verGasto=false;
	        }
	 	
	    }

	}


}
else if (intentos===3){
	console.log("has agotado todos los intentos. Por seguridad no puedes acceder")
}

else {
	var confirmarClave = prompt("Introduce la clave")
}
}
}




Paso 5 - Ahora podemos agregar los métodos para agregar, retirar y resetear saldo de los usuarios.

Importante:
Los saldos jamas pueden ser negativos.
	// Tu solución
Paso 6 - Ahora podemos agregar el método para saber la disponibilidad de stock

Importante:
Es necesaria clave (adminsitrador)
Debemos saber las existencias
Debemos saber que productos estan disponibles y cuales no.
Debemos incluir el código y el nombre
Cuando se imprima el informe... es necesario incluir la fecha.
	// Tu solución
